# Vitor Marques Barbosa
# Mineração de Dados - UFU


# Bibliotecas
library(tidyverse)
library(tidymodels)
library(dplyr)
library(rpart)
library(ggplot2)
library(utils)
getwd()


# Lendo Arquivo CSV
dataset <- read.csv2("ideb_escolas.csv", header = TRUE, sep = ",")

# Removendo Valores Nulos
na.omit(dataset)

View(dataset)

# Análise Exploratória dos Dados













# Primeiro Dataset, para calcular um modelo que prevê a nota do Ideb com todas as váriaveis disponíveis
dataset_A <- select(dataset, -c (ano, sigla_uf, id_municipio, ensino, anos_escolares, projecao)) %>%
  filter(taxa_aprovacao != "S/R", indicador_rendimento != "S/R", ideb != "S/R" )

#--------------------------------------------------------------------------------------------------------

# Dataset para treinar e testar o segundo modelo
dataset_B <- select(dataset, -c (ano, sigla_uf, id_municipio, ensino, anos_escolares,nota_saeb_matematica, nota_saeb_lingua_portuguesa, nota_saeb_media_padronizada, projecao)) %>%
  filter(taxa_aprovacao != "S/R", indicador_rendimento != "S/R", ideb != "S/R" )

# Dataset para aplicar o segundo modelo
dataset_C <- select(dataset, -c (ano, sigla_uf, id_municipio, ensino, anos_escolares,nota_saeb_matematica, nota_saeb_lingua_portuguesa, nota_saeb_media_padronizada, projecao)) %>%
  filter(taxa_aprovacao != "S/R", indicador_rendimento != "S/R", ideb == "S/R" )

#--------------------------------------------------------------------------------------------------------


# Vamos fazer a modelagem para o primeiro Dataset
# Separando os dados de treino e teste.

View(dataset_A)


# Transformando as colunas em factor
dataset_A$taxa_aprovacao                <- as.factor(dataset_A$taxa_aprovacao)
dataset_A$indicador_rendimento          <- as.factor(dataset_A$indicador_rendimento)
dataset_A$nota_saeb_matematica          <- as.factor(dataset_A$nota_saeb_matematica)
dataset_A$nota_saeb_lingua_portuguesa   <- as.factor(dataset_A$nota_saeb_lingua_portuguesa)
dataset_A$nota_saeb_media_padronizada   <- as.factor(dataset_A$nota_saeb_media_padronizada)
#--------------------------------------------------------------------------------------------------------

# Separando em dados de treino e teste
dataset_split <- initial_split(dataset_A, prop = 0.7)
A_treino  <- training(dataset_split)
A_teste   <- testing(dataset_split)


# Checando se o split deu certo
summary(dataset_A)
summary(A_treino)
summary(A_teste)
#--------------------------------------------------------------------------------------------------------

# Construção do 1ª Algoritmo de Classificação

ml_1 <- rpart(`ideb` ~., data = A_treino, control = rpart.control(cp=0))








#--------------------------------------------------------------------------------------------------------
#--------------------------------------------------------------------------------------------------------

# Vamos fazer a modelagem para o segundo Dataset
# Separando os dados de treino e teste.

view(dataset_B)



# Transformando as colunas em factor
dataset_B$taxa_aprovacao                <- as.factor(dataset_B$taxa_aprovacao)
dataset_B$indicador_rendimento          <- as.factor(dataset_B$indicador_rendimento)
dataset_B$nota_saeb_matematica          <- as.factor(dataset_B$nota_saeb_matematica)
dataset_B$nota_saeb_lingua_portuguesa   <- as.factor(dataset_B$nota_saeb_lingua_portuguesa)
dataset_B$nota_saeb_media_padronizada   <- as.factor(dataset_B$nota_saeb_media_padronizada)
#--------------------------------------------------------------------------------------------------------

# Separando em dados de treino e teste
dataset_split_2 <- initial_split(dataset_B, prop = 0.7)
B_treino  <- training(dataset_split_2)
B_teste   <- testing(dataset_split_2)


# Checando se o split deu certo
summary(dataset_B)
summary(B_treino)
summary(B_teste)
#--------------------------------------------------------------------------------------------------------

# Construção do 1ª Algoritmo de Classificação

ml_2 <- rpart(`ideb` ~., data = B_treino, control = rpart.control(cp=0))


